# Version de la syntaxe Docker Compose
version: '3.8'

services:
  # Service Nginx 1
  nginx1:
    image: nginx:alpine  # Utilise l'image légère Alpine de Nginx
    container_name: nginx1
    ports:
      - "8081:80"  # Mappe le port 80 du conteneur au port 8081 de l'hôte
    volumes:
      - ./nginx1/default.conf:/etc/nginx/conf.d/default.conf  # Montage du fichier de configuration Nginx
      - ./site:/var/www  # Montage du code source de Laravel
    depends_on:
      - php1  # Dépendance vis-à-vis du service PHP1

  # Service Nginx 2
  nginx2:
    image: nginx:alpine
    container_name: nginx2
    ports:
      - "8082:80"
    volumes:
      - ./nginx2/default.conf:/etc/nginx/conf.d/default.conf
      - ./site:/var/www
    depends_on:
      - php2

  # Service PHP 1
  php1:
    build:
      context: ./php1  # Contexte de construction Docker, utilisant le Dockerfile dans ./php
    container_name: php1
    volumes:
      - ./site:/var/www  # Montage du code source de Laravel
    depends_on:
      - mysql  # Dépendance de MySQL

  # Service PHP 2
  php2:
    build:
      context: ./php2
    container_name: php2
    volumes:
      - ./site:/var/www
    depends_on:
      - mysql

  # Service MySQL
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_DATABASE: laravel  # Nom de la base de données
      MYSQL_USER: root  # Utilisateur de la base de données
      MYSQL_PASSWORD:   # Mot de passe de l'utilisateur
      MYSQL_ROOT_PASSWORD:   # Mot de passe root de MySQL
    volumes:
      - db_data:/var/lib/mysql  # Volume pour la persistance des données MySQL

volumes:
  db_data:  # Déclaration du volume pour la base de données
